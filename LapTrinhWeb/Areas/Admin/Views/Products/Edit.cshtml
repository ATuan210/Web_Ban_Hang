@model LapTrinhWeb.Models.Product

@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<style>
    /* Toàn bộ form group cách nhau 20px */
    .form-group {
        margin-bottom: 20px;
    }

        .form-group .control-label {
            margin-left: 450px;
            font-weight: bold;
        }

        .form-group .form-control {
            width: 50%;
            display: inline-block;
            margin-left: 450px;
            box-shadow: rgba(0, 0, 0, 0.12) 0px 1px 3px, rgba(0, 0, 0, 0.24) 0px 1px 2px;
        }

    .no-underline {
        text-decoration: none;
        color: black;
        font-weight: bolder;
    }

        .no-underline:hover {
            text-decoration: underline;
            color: black;
        }
</style>

<div style="text-align: center; margin: 20px auto; font-weight: bolder; width: 70%; align-content: center; font-size: 22px; border-radius: 10px; background-color: #ADADAD;">ADMIN PAGE / EDIT <i class="fa-solid fa-pen-to-square fa-beat"></i></div>


@using (Html.BeginForm("Edit", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.ProId)

<div class="form-horizontal">
    <h4 style="margin-top: 50px; text-align: center; font-weight: bolder;">Chỉnh sửa sản phẩm :</h4>
    <hr style="width : 60%; margin: 20px auto;" />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ProId)

    <div class="form-group">
        @Html.LabelFor(model => model.ProName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Hình ảnh", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (!string.IsNullOrEmpty(Model.ProImage))
            {
                <img src="@Url.Content("~/img/pet/" + Model.ProImage)" alt="Ảnh sản phẩm" style="width:150px; height:auto; margin-bottom:10px; margin-left: 450px; border-radius: 15px;" />
            }
            <br />
            <span style="margin-left: 450px; font-weight: bolder;">@Html.Label("Chọn ảnh mới:")</span>
            <input type="file" name="imgfile" class="form-control" />
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.ProPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.ProPrice, new { @class = "form-control", type = "number", step = "1000" })
            @Html.ValidationMessageFor(model => model.ProPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CatId, "CatId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("CatId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.CatId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProBreed, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProBreed, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProBreed, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProColor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProColor, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProColor, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProAge, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProAge, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProAge, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProGender, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProGender, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProGender, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProVaccination, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProVaccination, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProVaccination, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProDeworming, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProDeworming, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProDeworming, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProHealth, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProHealth, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProHealth, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProShipping, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProShipping, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProShipping, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Origin, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Origin, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Origin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Lưu sản phẩm"
                   class="btn btn-default"
                   style="background-color: #ADADAD;
                          margin-left: 450px;
                          border-radius: 15px;
                          margin-top: 10px;
                          font-weight: bolder;
                          box-shadow: rgba(0, 0, 0, 0.16) 0px 3px 6px,
                                        rgba(0, 0, 0, 0.23) 0px 3px 6px;" />
        </div>
    </div>
</div>
}


<div style="margin-left: 450px;">
    <i class="fa-solid fa-backward" style="margin-right: 5px;"></i>@Html.ActionLink("Quay về danh sách", "Index", null, new { @class = "no-underline" })
</div>
